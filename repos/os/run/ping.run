#
# Build
#

if {![have_include power_on/qemu]} {

	puts "Run script is supported only on Qemu"
	return 0
}

set build_components {
	core
	init
	drivers/timer
	drivers/nic
	app/ping
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>}

append_platform_drv_config

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="nic_drv">
		<binary name="} [nic_drv_binary] {"/>
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nic"/></provides>
	</start>
	<start name="ping">
		<resource name="RAM" quantum="8M"/>
		<config src_ip="10.0.2.55"
		        dst_ip="10.0.2.2"
		        data_size="56"
		        period_sec="1"
		        verbose="no"/>
		<route>
			<service name="Nic"> <child name="nic_drv"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
</config>}

install_config $config

#
# Boot modules
#

# generic modules
append boot_modules {
	core init
	timer
	} [nic_drv_binary] {
	ping
	ld.lib.so
}

# platform-specific modules
lappend_if [have_spec linux] boot_modules fb_sdl

append_platform_drv_boot_modules

build_boot_image $boot_modules

append_if [have_spec x86]     qemu_args " -net nic,model=e1000 "
append_if [have_spec lan9118] qemu_args " -net nic,model=lan9118 "

append qemu_args " -net user -nographic "

set done_string ""
for {set i 0} {$i < 3} {incr i 1} {
	append done_string {.*64 bytes from 10\.0\.2\.2: icmp_seq=.* ttl=64 time=.*\n}
}

run_genode_until $done_string 10
