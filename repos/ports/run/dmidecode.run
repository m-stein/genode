assert_spec x86

set build_components { app/dmidecode core init timer server/report_rom }

build $build_components

create_boot_directory

append config {
<config>
	<parent-provides>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="ROM"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="200"/>

	<start name="report_rom">
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Report"/>
			<service name="ROM"/>
		</provides>
		<config verbose="yes"/>
	</start>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="dmidecode">
		<resource name="RAM" quantum="10M"/>
		<config>
			<vfs>
				<ram/>
				<dir name="dev">
					<log/> <null/>
				</dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log"/>
			<arg value="dmidecode"/>
			<arg value="--no-sysfs"/>
		</config>
	</start>
</config>
}

install_config $config

set boot_modules {
	report_rom
	core init ld.lib.so
	libc.lib.so
	timer dmidecode
	vfs.lib.so
}

build_boot_image $boot_modules

append qemu_args " -nographic"

run_genode_until "report_rom]   <result>.*?\n.*?report_rom]   	<table.*?\n.*?report_rom]   	</table>.*?\n.*?report_rom]   </result>.*?\n.*?child \"dmidecode\" exited with exit value 0.*?\n" 20
