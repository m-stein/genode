

              ===============================================
              Release notes for the Genode OS Framework 19.08
              ===============================================

                               Genode Labs



;intro
;@nfeske


Flexible keyboard layouts
#########################

;@chelmuth

Tracing
#######

;@ssumpf

commit ac0ecdf855f610d4d02a43bcaa7ad3b7ba74daef
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Fri May 3 15:56:58 2019 +0200

    base: make trace resumable
    
    revert relocations so a paused subject can resume without changing its
    policy.
    
    issue #3294

commit 25484f870e6ec2bd22830fcd3034cf0cad84d307
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Mon May 6 10:42:05 2019 +0200

    trace: make trace buffer resizeable
    
    Trace buffers a re-allocated during subsequent calls to 'trace'.
    
    issue #3294

commit 18b3253cac4100da7a586a1c02dbf924c5e98644
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Thu Apr 11 11:20:48 2019 +0200

    vfs_trace: VFS plugin that offers trace buffer access
    
    The plugin creates a file-system hierarchy that enabled the access of
    trace buffers for each component and its threads.
    
    issue #3294

commit 24eea0b653ee1c7a789d836423446e73dd4384c2
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed Jun 12 17:47:11 2019 +0200

    base: add 'trace' function to base/log.h
    
    The 'Genode::trace' convenience function prints messages to Genode's
    trace buffer (if tracing is enabled).
    
    issue #3294

commit c34176580c56a5770601620b78c49a268e51a157
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Fri Jun 14 16:15:50 2019 +0200

    os: recipe for 'trace_policy'
    
    * source packet for all trace policies
    
    issue #3294

commit 57e650ef2c3e88f2d27df6206385ccd9e07837ab
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Mon Jun 17 17:38:54 2019 +0200

    gems: recipes for vfs_trace pluging
    
    * source recipe for vfs_trace
    * pkg for 'trace_fs' with runtime
    
    issue #3294

commit d32e8390c20546f30c8e1d864c09646149ab4d00
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Tue Jun 18 14:38:09 2019 +0200

    os: remove trace_fs
    
    This component is superseded by the 'vfs_trace' plugin.
    
    Issue #3294.


Consolidation of the C runtime and Noux
#######################################

On our [https://genode.org/about/road-map#August_-_Release_19.08 - road map],
we vaguely hinted at our plan for the "consolidation" of the noux runtime,
which is actually meant as a polite way of saying that we are going to
remove it. We introduced the
[https://genode.org/documentation/release-notes/11.02#Noux_-_an_execution_environment_for_the_GNU_userland - Noux runtime]
in 2011 as way to execute command-line-based GNU software directly on
Genode. It has served us well over the years and is - in fact - a crucial
ingredient of Sculpt OS and other system scenarios such as the Genodians.org
web server. Noux supplements Genode with two valuable assets, namely
a flexible and expandable virtual file system (VFS) layer, and the implementation
of the
[https://genode.org/documentation/release-notes/12.02#Noux_support_for_fork_semantics - Unix way]
to spawn applications ('fork' and 'execve').

In the
[https://genode.org/documentation/release-notes/17.02#Enhanced_VFS_infrastructure - meantime],
noux' VFS implementation has become independent from the noux runtime and
is now prominently employed by Genode's C runtime and the VFS server
component. Genode's C runtime became more and more complete, alleviating
the use of noux as POSIX compatibility layer except for programs that
depend on a working implementation of 'fork' and 'execve'.

The current release fills this remaining gap in Genode's C runtime by
providing 'fork', 'execve', and cousins such as 'wait4' and 'getpid' as
regular parts of the libc. This will eventually make noux redundant.

Note that this change does *NOT* make Genode reliant on POSIX.
the C runtime including the Unix features are entirely optional.

As one stepping stone of this undertaking, noux applications, which had
previously be compiled for noux, have become binary compatible with the
regular C runtime. So one can run programs like 'bash' directly as
Genode component without any friction.

There are a few collateral improvements of Genode's dynamic linker and the C
runtime on the account of the new 'fork' and 'execve' implementation. E.g., in
addition to the already supported 'stdin', 'stdout', and 'stderr'
configuration, the libc can be instructed to initialize arbitrary file
descriptors as follows:

! <config>
!   ...
!   <libc ...>
!     <fd id="3" path="/dev/log" writeable="yes" readable="no" seek="10"/>
!     ...
!   </libc>
! </config>

The libc-based implementation of 'fork' and 'execve' can be tried out via
the new _ports/run/bash.run_ script. Note that there are still a number of
limitations such as the lack of signal and ioctl handling. Pipes are not
supported, and shebangs ('!#') are not interpreted yet. That said, once those
missing pieces come into place, we can fade out the use of noux within Genode.


64-bit ARM and NXP i.MX8
########################

64-bit ARM support in our custom base-hw kernel
===============================================

By introducing rudimentary Raspberry Pi 3 support on top of the Fiasco.OC
kernel in the last release, the first ARM 64-bit support entered the Genode OS
framework. We pursued the ARM 64-bit path and introduce support for Raspberry Pi
3 as well as the i.MX8 evaluation kit (EVK) this time using our own base-hw
kernel.

Noteworthy additions in the base-hw kernel are support for the AARCH64 system
level architecture, and the use of the modern GIC v3 interrupt controller on top
of the i.MX8 EVK board. Minor changes had to be made to the page-table
implementation of ARMv7 with Large Physical Address Extension (LPAE) to re-use
it for ARMv8. Moreover, the TLB maintainance kernel internal API needs to be
changed slightly for all ARM platforms.

Currently, the Raspberry Pi 3 platforms gets regularily tested using Qemu.
In contrast we use the i.MX8 EVK physical hardware to test this platform.
Both platforms are driven with a single cpu core only for the moment.


Kernel-agnostic network driver for i.MX8
========================================

;@cproc

commit 4dafdbd5b75da7632d84b4411c1148431979f93c
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Fri Jun 21 15:04:03 2019 +0200

    dde_linux: update 'fec' driver to version 4.16.3
    
    Fixes #3432

commit 5dd1abcc2da7fae757e34989c971c53954114b0c
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Thu Jun 27 19:41:57 2019 +0200

    depot: add recipe for drivers_nic-imx7d_sabre
    
    Fixes #3433

commit 71ce1442c8cc97e552214b75b3a9fe4e3c7723a0
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Thu Jun 27 19:42:01 2019 +0200

    run: enable 'imx7d_sabre' in network tests
    
    Fixes #3434

commit 38dcdeeb049da5ff4132b0a39dbe5ad13bdb88f1
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Thu Jul 4 15:54:19 2019 +0200

    fec_nic_drv: arm_64 support
    
    Fixes #3446

commit 91c8e70bef31b0d9cadc162d2cec46b789a236ea
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Thu Jul 4 15:54:19 2019 +0200

    depot: add recipe for drivers_nic-imx8q_evk
    
    Fixes #3452


Enhanced packaging and test infrastructure for ARMv8
====================================================

;@ssumpf

commit e337b844e558b8c50eb06a92271e7bbfc079b020
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue May 21 14:01:26 2019 +0200

    depot: support for ARM 64-bit for base-foc on rpi3
    
    issue #3407

commit c107aba9138165c9ffbc09393edaa6e4b20440c2
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue May 21 14:02:45 2019 +0200

    depot_autopilot: add ARM 64-bit support
    
    issue #3407

commit 59347d256058801ff668837b941937f231f54647
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed May 29 13:26:47 2019 +0200

    stdcxx: make linkable for ARM 64-Bit
    
    'typeinfo for std::invalid_argument' was not found when using 'V' (weak
    object)
    
    issue #3407

commit e43b848ac88aeb1d3d3392cfd71f2929d7f1aa26
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed May 29 13:28:47 2019 +0200

    jitterentropy: ARM 64-Bit version
    
    issue #3407

commit 790a57041ca7128d5431985adf08376c8a9c2e0b
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed May 29 13:29:57 2019 +0200

    base: add ARM 64-Bit to base API
    
    issue #3407

commit ef8140cce5bd00d84e621042222891e625f35a1c
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed May 29 13:40:53 2019 +0200

    lxip: ARM 64-Bit support
    
    issue #3407

commit 1b489820a9042fab4d7c55bbd4072eb2d69c4954
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue Jun 4 21:17:10 2019 +0200

    base: timestamp support for ARM 64-Bit
    
    issue #3407

commit f3a7d3750fb0754a71296c0a5323dc535a9f3754
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue Aug 13 13:43:28 2019 +0200

    base: Add Linux and GOT relative startup code on ARM
    
    * Linux specific startup code for base-linux ARM
    * load symbols global offset table relative in order to avoid text
      relocations
    
    issue #3466

commit 0ee178903aa6286f64dfb3d3f49e7eefad9e91f6
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed Aug 21 16:53:59 2019 +0200

    noux-pkg: enable noux packages for ARMv8
    
    * add -fPIC
    * disable 'stdbuf' for coreutils
    * works for bash as well


Base framework and OS-level infrastructure
##########################################

Improved RTC handling
=====================

;@mstein

commit 47e6d72bf2b07ee5cc8443509f4b4e57fdcbe318
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Mon Jul 1 17:23:33 2019 +0200

    rtc_drv: add support for setting RTC
    
    The rtc_drv on x86 can now by used to also set the RTC. If the config
    attribute 'allow_setting_rtc' is set to 'yes' the driver will update
    the RTC from the content of the 'set-rtc' ROM module. A valid ROM must
    contain a top node with the following attributes: 'year', 'month',
    'day', 'hour', 'minute' and 'second'.
    
    * Only rudimentary checking of the provided values is done.
    * '12H' mode is not supported.
    
    Fixes #3438.

commit 86cacd23bb306ee1dad5952b127caf27d19edba1
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Mon Jul 15 13:24:04 2019 +0200

    rtc: add documentation comments
    
    Issue #3450

commit ea2b3301584320a4c501faaf361c5938902f9605
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Mon Jul 15 13:33:25 2019 +0200

    rtc: extended session with set-signal
    
    A client may register a signal handler to be notified whenever the
    RTC value was changed, i.e., a mis-configured clock was synchronized,
    by calling 'set_sigh()'.
    
    Issue #3450

commit a7fe4a502d96b3ac33f2753e219bc906a0f7b6d2
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Mon Jul 15 15:06:23 2019 +0200

    rtc_drv: implement set signal handling
    
    Issue #3450

commit 0037edfeee7595e20581d28af87e96728286dbfb
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Wed Aug 14 14:53:40 2019 +0200

    libports: minimal time-type conversion from musl
    
    These are time-type conversion functions (including leap years and
    seconds) taken from musl-libc git rev
    c82d3bada30cb27e14abda7859da5d2e784830ff with some adaptions. Musl is
    licensed under permissive MIT license.
    
    Issue #3450

commit 99cb585b6ee1dff088a374a0c3103862af485ef2
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Mon Jul 15 17:32:20 2019 +0200

    libports: system RTC server and test
    
    For now in libports because it relies on contrib sources from musl
    doing the time data conversion.
    
    Issue #3450

commit 322bacd38033bde7ddf604849ba870e79000f449
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Fri Jul 12 14:49:15 2019 +0200

    timeout_types.xsd: Minutes type
    
    Ref #3448
    Ref #3450

commit cb6377355ea9cfec93629603404995d32d61b925
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Fri Jul 12 15:13:40 2019 +0200

    sntp_client: report received transmit timestamp
    
    For now in libports because it relies on contrib sources from musl doing
    the time data conversion.
    
    Ref #3448
    Ref #3450

commit b8ed80b7ddb2ac37ec01e74868463dae89f899aa
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Wed Aug 14 14:01:19 2019 +0200

    Simple libc-based RTC test
    
    Issue #3450

commit 1fdd5b636b8c407256ae61bfb95e24458ce72890
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Wed Aug 14 14:02:33 2019 +0200

    vfs: watch set-rtc signal in RTC file system
    
    Issue #3450

commit 18e586daedc8d0d0174f5ae6e82fd8cb2369f9a2
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Mon Aug 12 16:28:29 2019 +0200

    libc: merge RTC and time backends
    
    Issue #3450

commit 316f9e4df3ce293420bc9376f9b5353a2cf27930
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Mon Aug 12 18:10:14 2019 +0200

    libc: add VFS watch handle accessor
    
    Issue #3450

commit 9cf5da85ef8e6f9fc8ad906b5907ce6c25aa5871
Author: Josef SÃ¶ntgen <josef.soentgen@genode-labs.com>
Date:   Mon Aug 12 18:10:38 2019 +0200

    libc: change time back end to re-read RTC
    
    Issue #3450

commit d01cc3bf41a1313a59ccabc88e79986167f7fb21
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Wed Aug 14 09:12:12 2019 +0200

    Configurable set_rtc values in RTC test
    
    Fixes #3450

commit ce633c0bbab48d0e77bb86de66de49b582381975
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Fri Aug 16 17:55:48 2019 +0200

    gems: recipes/pkg/drivers_rtc-pc
    
    Ref #3450

commit 8509687c8d3bbc6c1beab448583c95499a1ae5ca
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue Aug 20 16:11:12 2019 +0200

    system_rtc.run: use packages
    
    issue #3450


SMBIOS driver
=============

;@mstein

commit 1e379cb3a9c7252a12137d2791fa09d97460cb8b
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Tue Jul 9 18:28:12 2019 +0200

    drivers/acpi: provide plain SMBIOS table as report
    
    Ref #3430

commit fe426e6f8f60769fe22d410c33e5a21847e6b08b
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Tue Jul 9 18:36:46 2019 +0200

    smbios_decoder: XML report from SMBIOS table ROM
    
    Fixes #3430


Clipboard
=========

Genode introduced a principle copy-and-paste mechanism already four years ago
[https://genode.org/documentation/release-notes/15.11#Copy_and_paste].
However, originally created as a part of the technology demo, the mechanism
remained unused in our day to day work with Genode. This changed now. We
took the integration of copy-and-paste support in Sculpt OS as an opportunity
to revive and refine the existing mechanism and supplement it with the
features needed to make it practical for daily use.

We believe that the result aligns ease of use nicely with security.
The concept is described in a dedicated article at Genodians.org:
[https://genodians.org/nfeske/2019-07-03-copy-paste].

On a technical level, the existing clipboard component received a new
option that allows for dynamic information-flow policies based on
user interactivity (keyboard focus, activity).
When setting the config attribute 'match_labels="yes"', the clipboard
performs plausibility checks for copy and paste operations against the
focus of the nitpicker GUI server. The clipboard policy - including
information-flow policies - has become reconfigurable.

To make window-manager clients compatible with the clipboard's dynamic
policy, the window manager got enhanced with the ability to proxy the
interaction with the clipboard.

GUI clients in turn - in particular the graphical *terminal* - became able
to interact with the clipboard.
With the '<config>' attribute 'copy="yes"' specified, the terminal allows
the user to select text to be reported to a "clipboard" report. The selection
mode is activated by holding the left shift key. While the selection mode
is active, the text position under mouse pointer is highlighted and the
user can select text via the left mouse button. Upon release of the mouse
button, the selection is reported.
Vice versa, with the '<config>' attribute 'paste="yes"' specified, the
terminal allows the user to paste the content of a "clipboard" ROM session
to the terminal client by pressing the middle mouse button.

Finally, we integrated those new abilities into Sculpt OS and to several
installable packages, including virtual machines, the noux-system package,
and graphical Qt5-based applications.


Enhanced SSH terminal
=====================

This release paves the way for remotely managing Genode devices over SSH.
Until now, only interactive SSH sessions were supported. It is now possible to
execute commands from a remote SSH client.
E.g., 'ssh noux@localhost -p 5555 "ls -hal /bin/'. For non-interactive
sessions, ssh_terminal requires a helper component. This component is
responsible to create the environment for the command to run in. You can find
an example for such a component in _gems/src/test/exec_terminal_.
It starts noux in a sub init and executes the provided command inside of it.
The new _ssh_exec_channel.run_ script gives a demonstration on how this
feature can be used.

This work is a contribution by [https://gapfruit.com - Gapfruit]. Thanks
for this great new feature!


Storage-stack improvements
==========================

The desire of one Genode developer to exchange data via Iomega ZIP drives
between an Atari Falcon and Sculpt OS called for a number of small
improvements across several components of the storage stack.

First, the USB-block driver has been changed to exit on an initialization
failure instead of waiting for another (supported) device. This change enables
the Sculpt manager to detect such conditions and release the USB device
hardware by removing the driver component. Such a failed initialization may
happen with exotic USB-storage devices such as ZIP drives. With the device
released, however, it can be assigned as to a virtual machine to access it
using a guest OS with a broader support of devices.

Second, the USB-block driver received new support for issuing the
SCSI START-STOP command at initialization time, thereby overcoming the
ZIP-drive initialization failure.

Third, we enhanced the part-block component with the ability to parse AHDI
partition schemes and detect the GEMDOS variant of FAT as used by Atari TOS.

Fourth, we enabled the Rump VFS plugin to access GEMDOS file systems. The
GEMDOS variant is supported by NetBSD's "msdos" file-system driver. However,
it must explicitly be enabled by a mount flag. Hence, we added the principle
ability for passing mount flags to NetBSD file-system drivers and enabled the
MSDOSFSMNT_GEMDOSFS flag based on the VFS plugin's config attribute
'gemdos="yes"'.

With these changes in place, data can now be exchanged directly between
Atari-formatted disks and Sculpt OS. That said, advanced use cases such as
media changes at runtime are not covered yet.


Updated Ada/SPARK runtime
=========================

Genode's Ada/SPARK runtime is developed and maintained by
[https://componolit.com - Componolit]. Thanks for this excellent
collaboration!

The updated Componolit Ada runtime 1.1.0 increases the proof coverage and
cleans up the source code structure. SPARK mode is now enabled wherever
possible and unneeded abstractions have been removed. Furthermore, the 64-bit
addition and subtraction have been proven to be free of runtime errors.
As a new feature, the runtime now supports the use of inline assembly in Ada.

The removal of unneeded features such as the incomplete threading support for
the secondary stack has greatly reduced the runtime's complexity while keeping
the current functionality available.
Also GNAT.IO has been removed as its implementation was incomplete and
complex. A simpler replacement has been introduced with
'Componolit.Runtime.Debug'.

Unrelated to Genode, the runtime now supports [https://muen.sk/ - Muen] and
the API/ABI of the runtime has been separated from the GNAT ABI.


Libraries and applications
##########################

Updated Qt5
===========

;@cproc

Virtualization
==============

As follow up of Genode's work on the 
[https://genode.org/documentation/release-notes/19.05#Kernel-agnostic_virtual-machine_monitors - kernel agnostic virtual monitor interface]
on x86, we added with this release principle support to run our port of
Virtualbox on Genode/Fiasco.OC. We write -principle- support, since we managed
to get the VMM running with Fiasco.OC, but unfortunately not all required
features by the VMM are available by the Fiasco.OC kernel, e.g. guest FPU
registers, PDPTE registers and task-priority support. In practice this means,
that the VMs with Windows and Linux come up to a certain point, but will fail
later whenever the guest state run out of synchronization between
VMM and hardware. In contrast, the Seoul VMM runs fine on Fiasco.OC since it
requires not the mentioned missing features.

Main working items had been the completion of transfer of the available guest
registers and control flow synchronization improvements between VMM and Fiasco.OC
kernel. Additionally, the usage of priorities for the Virtualbox pthreads in
the VMM had to been disabled. Finally, some tests for Virtualbox with
Genode/Fiasco.OC got enabled for nightly regular testing.



Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Tue Aug 13 14:05:23 2019 +0200

    vbox: add 'RTMemDupExTag()' implementation
    
    Fixes #3473

Browser App VM
==============

;@mstein

Build system and tools
######################

;@chelmuth

commit 8d62f21b4058ad118b3de418006c28d3651c6ecc
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Fri Jun 14 16:18:58 2019 +0200

    autopilot: support arch-specific build directories
    
    Replace the notion of board-specific platforms by clear definition
    architecture and board.
    
    Also added new command line switch for "targets"
    
      -t <target>         test target as triple of architecture-board-kernel,
                          e.g., arm_v7a-pbxa9-hw
    
    Related to #3316
    Fixes #3417

